#!/usr/bin/env bash

iptables --flush
iptables -t nat --flush

iptables --policy INPUT DROP
iptables --policy FORWARD DROP
iptables --policy OUTPUT DROP

iptables -t nat --policy PREROUTING DROP
iptables -t nat --policy POSTROUTING DROP

# connect to external world
iptables --append INPUT --destination $ETH1_IP --match state --state ESTABLISHED,RELATED -j ACCEPT
iptables --append OUTPUT --source $ETH1_IP -j ACCEPT

# accept connections to gateway from local network
iptables --append INPUT --destination 192.168.1.1 --source 192.168.1.0/24 --protocol tcp --destination-port 80 -j ACCEPT
iptables --append OUTPUT --destination 192.168.1.0/24 --source 192.168.1.1 -j ACCEPT

# accept forwarding from (but not to) local network
iptables --append FORWARD --source 192.168.1.0/24 -j ACCEPT
iptables --append FORWARD --destination 192.168.1.0/24 --match state --state ESTABLISHED,RELATED -j ACCEPT

# make keepalive less of a royal pain in the butt
iptables --insert FORWARD --source 192.168.1.0/24 --destination ! 192.168.1.1 --protocol tcp --match state --state ESTABLISHED -j REJECT --reject-with tcp-reset

# set up DNS to go through
iptables -t nat --append PREROUTING --protocol udp --destination-port 53 -j ACCEPT
iptables -t nat --append POSTROUTING --protocol udp --destination-port 53 --out-interface eth1 -j SNAT --to-source $ETH1_IP

# set up prerouting to redirect HTTP to the gateway by default
iptables -t nat --append PREROUTING --source 192.168.1.0/24 --protocol tcp --destination-port 80 -j DNAT --to-destination 192.168.1.1

